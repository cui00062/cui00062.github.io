
.grid{

    width: 800px;
    /*  CSS box model:
    margin: 10px; margin on all sides
    margin: 10px 5px; -- 10px top and bottom, 5pxleft and right
    margin 10px 5px 7px; -- 10px top, 5px left/right, 7px bottom
    margin 10px 5px 7px 8x; -- top, right, bottom left*/

    margin: 10px auto 0;
    border: 2px solid black;

/*make this a grid container*/
display: grid;

/*set a grid with two columns, each 400px wide
grid-template-columns: 400px 400px;*/
/*set agrid wth two columns, each taking up an equal amount of space*/
/*grid-template-columns: 1fr 1fr;*/
/*fr="fraction*, oor a fraction of available space/
/*you can also use grid-template-rows*/
/*use'repeat' to add four columns*/
grid-template-columns: repeat(4, 1fr);
/*you can also use'grid-template-rows*/
grid-template-rows: repeat(4, 100px);

}
.grid-item{
    background: lightgray;
    font-size: 24px;
    border: 2px dashed black;
    height: 50px;
    width: 50px;

}
/*using the grid column and raw numbers, position a box exactly*/
.grid-item:nth-child(1){

    grid-column-start:2;
    grid-column-end:4;
    grid-row-start:2;
    grid-row-end:3;
}

/*use the justify and align proprtties to position items*/
.grid-item:nth-child(4){
    /*align property aligns things vertically*/

    align-self: end;
        /*justify property aligns things horizontally*/
    justify-self: end;
}



/*grid-template-columns 
grid-template-rows
.grid {   display: grid;   
    grid-template-columns: repeat(3, 1fr);  
     grid-template-rows: repeat(4, 1fr); 
    }

    .grid {   display: grid;   
        grid-template-columns: repeat(3, 1fr);   
        grid-template-rows: repeat(3, 1fr); } 
/* item1 will fill 2 columns and 1 row */  
/*.item1 {   grid-column-start: 1;   
    grid-column-end: 3;   
    grid-row-start: 1;   
    grid-row-end: 2; 
}*/